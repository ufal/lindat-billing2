extends dashboard.pug

block title
    title Login Billing: Dashboard

block content
    .container
        .row
            .col.s12
                h5 IPs
                if error
                    .red-text
                        strong= error
                if message
                    .green-text
                        strong= message
                .divider
        .row
            .col.s12
                form(method="get")
                    .row
                        .input-field.col.s12
                            i.material-icons.prefix compare
                            .select-wrapper
                              select.browser-default#measure(name="measure")
                                each m in measures
                                    option(value=m.val,  selected= (m.val==val.measure) ? 'selected' : false)= m.text
                            label(for="measure") Measure
                    .row
                        .input-field.col.s6
                            i.material-icons.prefix format_size
                            .select-wrapper
                              select.browser-default#level(name="level")
                                each l in levels
                                    option(value=l,  selected= (l==val.level) ? 'selected' : false)= l
                            label(for="level") Period level size (table column)
                        .input-field.col.s6
                            i.material-icons.prefix chevron_right
                            input#min_exist.validate(name="min_exist" type="number" step="1" min="0" required="" aria-required="true" value=val.min_exist )
                            label(for="min_exist") minimum required value in any period
                            span.helper-text(data-error="Number Required")
                    .row
                        .input-field.col.s6
                            i.material-icons.prefix date_range
                            input#start.validate(name="start" type="date" required="" aria-required="true" value=val.start )
                            label(for="start") Start date (included)
                            span.helper-text(data-error="Date Required")
                        .input-field.col.s6
                            i.material-icons.prefix last_page
                            input#end.validate(name="end" type="date" required="" aria-required="true" value=val.end )
                            label(for="end") End date (excluded)
                            span.helper-text(data-error="Date Required")
                    .row
                        .input-field.col.s6
                            i.material-icons.prefix important_devices
                            .select-wrapper
                              select.browser-default#service(name="service")
                                option(value="",  selected= (typeof val.service=='undefined' || val.service=='') ? 'selected' : false) ALL
                                each s in services
                                    option(value=s[0],  selected= (s[0]==val.service) ? 'selected' : false)= s[1]
                            label(for="service") Service include
                        .input-field.col.s6
                            i.material-icons.prefix delete
                            .select-wrapper
                              select.browser-default#service_exc(name="service_exc" disabled='disabled')
                                option(value="",  selected= (typeof val.service_exc=='undefined' || val.service_exc=='') ? 'selected' : false) NONE
                                each s in services
                                    option(value=s[0],  selected= (s[0]==val.service_exc) ? 'selected' : false)= s[1]
                            label(for="service_exc") Service exclude
                    .row
                        .input-field.col.s12
                            button.btn.grey.waves-effect.col.s12.white-text(type="submit")
                                strong Update table
        .row
            .col.s12
                table.striped(type='lb-datatable' data-type='json' data-field='data' data-url='api/ips?'+table_params data-header-field='header' data-items-field='header' )
                  script.
                    [ {
                      "targets": 0,
                      "data": null,
                      "type": 'html',
                      "searchable": true,
                      "render": function ( data, type, row, meta ) {return '<a class="clr-fg-link" href="admin/ip/'+data[0]+'">'+data[0]+'</a>';}
                      },
                      {
                      "targets": '_all',
                      "searchable": false
                      }
                    ]

